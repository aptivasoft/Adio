using System;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.Data.SqlClient;
//using Microsoft.ReportingServices.ReportRendering;
using Microsoft.Reporting.WebForms;
//using ReportingServiceRender.MyReportService;
//using Microsoft.SqlServer.ReportingServices2005;
public partial class ReportNewRx : System.Web.UI.Page 
{
    string conStr = ConfigurationManager.AppSettings["conStr"];
    NLog.Logger objNLog = NLog.LogManager.GetCurrentClassLogger();
    protected void Page_Load(object sender, EventArgs e)
    {
        if (Session["User"] == null || Session["Role"] == null)
            Response.Redirect("../Login.aspx");

        if (!Page.IsPostBack)
        {
            SqlConnection sqlCon = new SqlConnection(conStr);
            SqlCommand sqlCmd = new SqlCommand("sp_getRx30Clinic", sqlCon);
            sqlCmd.CommandType = CommandType.StoredProcedure;

            //SqlParameter sp_UserID = sqlCmd.Parameters.Add("@User", SqlDbType.VarChar, 20);
            //sp_UserID.Value = (string)Session["User"];

            //SqlParameter sp_UserRole = sqlCmd.Parameters.Add("@UserRole", SqlDbType.Char, 1);
            //sp_UserRole.Value = (string)Session["Role"];

            SqlDataAdapter sqlDa = new SqlDataAdapter(sqlCmd);
            DataSet dsRx30Clinic = new DataSet();
            try
            {

                sqlDa.Fill(dsRx30Clinic, "Rx30Clinic");
                ddlOrganization.DataSource = dsRx30Clinic;
                ddlOrganization.DataTextField = "Clinic_Name";
                ddlOrganization.DataValueField = "Clinic_ID";
                ddlOrganization.DataBind();
                if (dsRx30Clinic.Tables[0].Rows.Count < 2)
                {
                    ddlOrganization.Items.RemoveAt(0);
                }
                else
                {
                    ddlLocation.Items.Insert(0, new ListItem("All Locations", "0"));
                    ddlLocation.SelectedIndex = 0;
                }
                ddlOrganization.SelectedIndex = 0;

                bindLocation(ddlOrganization.SelectedValue);

            }
            catch (Exception ex)
            {
                objNLog.Error("Error : " + ex.Message);
            }
            int date = int.Parse(DateTime.Now.Day.ToString()) - 1;
            txtDate1.Text = DateTime.Now.AddDays(-date).ToString("MM/dd/yyyy");
            txtDate2.Text = DateTime.Now.ToString("MM/dd/yyyy");
            Filldata(int.Parse(ddlOrganization.SelectedValue), 0, txtDate1.Text, txtDate2.Text);
        }
         }
    protected void bindLocation(string clinicID)
    {
        SqlConnection sqlCon = new SqlConnection(conStr);
        SqlCommand sqlCmd = new SqlCommand("sp_getFacilities", sqlCon);
        sqlCmd.CommandType = CommandType.StoredProcedure;
        SqlParameter sp_ClinicID = sqlCmd.Parameters.Add("@ClinicID", SqlDbType.Int);
        sp_ClinicID.Value = clinicID;

        SqlDataAdapter sqlDa = new SqlDataAdapter(sqlCmd);
        DataSet dsFacilityList = new DataSet();
        try
        {
            ddlLocation.DataTextField = "Facility_Name";
            ddlLocation.DataValueField = "Facility_ID";
            sqlDa.Fill(dsFacilityList, "FacilityList");
            ddlLocation.DataSource = dsFacilityList;
            ddlLocation.DataBind();
            Filldata(int.Parse(ddlOrganization.SelectedValue), int.Parse(ddlLocation.SelectedValue), txtDate1.Text, txtDate2.Text);
        }
        catch (Exception ex)
        {
            objNLog.Error("Error : " + ex.Message);
        }
    }

    public DataTable GetDate(int ClinicID, int FacilityID, string date1, string date2)
    {
        SqlConnection sqlCon = new SqlConnection(conStr);
        SqlCommand sqlCmd = new SqlCommand("sp_ReportRx30Data", sqlCon);
        sqlCmd.CommandType = CommandType.StoredProcedure;

        SqlParameter sp_OrgID = sqlCmd.Parameters.Add("@OrgId", SqlDbType.Int);
        sp_OrgID.Value = ClinicID;
        SqlParameter sp_LocID = sqlCmd.Parameters.Add("@LocId", SqlDbType.Int);
        sp_LocID.Value = FacilityID;
        SqlParameter sp_Date1 = sqlCmd.Parameters.Add("@Date1", SqlDbType.Date);
        sp_Date1.Value = date1;
        SqlParameter sp_Date2 = sqlCmd.Parameters.Add("@Date2", SqlDbType.Date );
        sp_Date2.Value = date2;

        SqlDataAdapter sqlDa = new SqlDataAdapter(sqlCmd);
        DataSet dsPatient = new DataSet();
        try
        {
            sqlDa.Fill(dsPatient, "patDetails");
        }
        catch (Exception ex)
        {
            objNLog.Error("Error : " + ex.Message);
        }
        return dsPatient.Tables["patDetails"];
    }

    protected void ddlOrganization_DataBound(object sender, EventArgs e)
    {
            ddlOrganization.Items.Insert(0, new ListItem("All Organizations", "0"));
            ddlOrganization.SelectedIndex = 0;
    }

    protected void ddlLocation_DataBound(object sender, EventArgs e)
    {
        ddlLocation.Items.Insert(0, new ListItem("All Locations", "0"));
        ddlLocation.SelectedIndex = 0;
    }

    protected void ddlOrganization_SelectedIndexChanged(object sender, EventArgs e)
    {
        bindLocation(ddlOrganization.SelectedValue);
    }

    protected void ddlLocation_SelectedIndexChanged(object sender, EventArgs e)
    {
       // Filldata(int.Parse(ddlOrganization.SelectedValue), int.Parse(ddlLocation.SelectedValue), txtDate1.Text, txtDate2.Text);
    }

    protected void btnRxReport_Click(object sender, EventArgs e)
    {
        Filldata(int.Parse(ddlOrganization.SelectedValue), int.Parse(ddlLocation.SelectedValue), txtDate1.Text,txtDate2.Text);
    }

    protected void Filldata(int ClinicID, int FacilityID, string date1,string date2)
    {
        try
        {
            Microsoft.Reporting.WebForms.ReportDataSource rds = new Microsoft.Reporting.WebForms.ReportDataSource("eCareXdb_NewDataSet_sp_ReportNewPrescription");
            rds.Value = GetDate(ClinicID, FacilityID, date1, date2);
            ReportViewer2.LocalReport.ReportPath = "Reports/RptNewRx.rdlc";

            ReportParameter Date1 = new ReportParameter("Date1", date1);
            ReportParameter Date2 = new ReportParameter("Date2", date2);
            ReportParameter[] rp = new ReportParameter[] { Date1, Date2 };

            ReportViewer2.LocalReport.SetParameters(rp);
            ReportViewer2.LocalReport.DataSources.Clear();
            ReportViewer2.LocalReport.DataSources.Add(rds);
            ReportViewer2.LocalReport.Refresh();
        }
        catch (Exception ex)
        {
            objNLog.Error("Error : " + ex.Message);
        }
    }
}
